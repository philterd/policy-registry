{
  "variables": {
    "ami_name": "",
    "azure_client_secret": "",
    "build_number": "",
    "capture_container_name": "",
    "commit": "",
    "version": "",
    "working_directory": "",
    "iam_instance_profile": "",
    "instance_type": "t3.micro",
    "region": "us-east-1",
    "source_ami": "",
    "source_ami_description": "",
    "ssh_username": "ec2-user",
    "subnet_id": "subnet-a8c4e883",
    "vpc_id": "vpc-3da1cb58",
    "built_by": "manual",
    "application": ""
  },
  "builders": [
    {
      "name": "azure",
      "type": "azure-arm",
      "client_id": "af87533a-082c-43da-be0c-784e62b341b5",
      "client_secret": "{{user `azure_client_secret`}}",
      "subscription_id": "b905b94b-9da0-40ba-90b0-471edb85a3b3",
      "tenant_id": "bb43555d-8f86-4363-8bc2-8a3c97e4a65d",
      "managed_image_resource_group_name": "mtnfogpackerbuilds",
      "managed_image_name": "{{user `capture_container_name`}}",
      "os_type": "Linux",
      "image_publisher": "OpenLogic",
      "image_offer": "CentOS",
      "image_sku": "7.4",
      "temp_resource_group_name": "temp-build",
      "location": "East US",
      "vm_size": "Basic_A1",
      "ssh_username": "{{user `ssh_username`}}"
    },
    {
      "name": "aws",
      "type": "amazon-ebs",
      "ami_name": "{{user `ami_name`}}",
      "ami_description": "{{user `ami_name`}}",
      "ena_support": true,
      "iam_instance_profile": "{{user `iam_instance_profile`}}",
      "instance_type": "{{user `instance_type`}}",
      "region": "{{user `region`}}",
      "run_tags": {
        "Name": "Creating {{user `ami_name`}} AMI"
      },
      "security_group_id": "{{user `security_group_id`}}",
      "source_ami": "{{user `source_ami`}}",
      "ssh_username": "{{user `ssh_username`}}",
      "subnet_id": "{{user `subnet_id`}}",
      "tags": {
        "Name": "{{user `ami_name`}}",
        "GitCommit": "{{user `commit`}}",
        "Version": "{{user `version`}}",
        "Base AMI": "{{user `source_ami`}}",
        "Base AMI Description": "{{user `source_ami_description`}}",
        "Built By": "{{user `built_by`}}",
        "Application": "{{user `application`}}",
        "Build Number": "{{user `build_number`}}"
      },
      "vpc_id": "{{user `vpc_id`}}"
    }
  ],
  "provisioners": [
    {
      "type": "shell",
      "inline": [
        "sudo yum -y upgrade"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "sudo mkdir -p /opt/filter-profile-registry/ssl",
        "sudo mkdir -p /opt/filter-profile-registry/indexes",
        "sudo useradd --system --create-home --gid philter philter",
        "sudo usermod --lock --shell /sbin/nologin philter",
        "sudo chage -E0 philter",
        "sudo chown {{user `ssh_username`}}:{{user `ssh_username`}} /opt/filter-profile-registry -R"
      ]
    },
    {
      "type": "file",
      "destination": "/opt/filter-profile-registry/filter-profile-registry.jar",
      "source": "{{user `working_directory`}}/filter-profile-registry.jar"
    },
    {
      "type": "file",
      "destination": "/opt/filter-profile-registry/application.properties",
      "source": "{{user `working_directory`}}/application.properties"
    },
    {
      "type": "file",
      "destination": "/opt/filter-profile-registry/README.txt",
      "source": "{{user `working_directory`}}/README.txt"
    },
    {
      "type": "file",
      "destination": "/opt/filter-profile-registry/NOTICE.txt",
      "source": "{{user `working_directory`}}/NOTICE.txt"
    },
    {
      "type": "file",
      "destination": "/opt/filter-profile-registry/LICENSE.txt",
      "source": "{{user `working_directory`}}/LICENSE.txt"
    },
    {
      "type": "file",
      "destination": "/opt/filter-profile-registry/philter.conf",
      "source": "{{user `working_directory`}}/philter.conf"
    },
    {
      "type": "shell",
      "inline": [
        "wget https://d3pxv6yz143wms.cloudfront.net/11.0.2.9.3/java-11-amazon-corretto-devel-11.0.2.9-3.x86_64.rpm -O /tmp/java-11-amazon-corretto-devel-11.0.2.9-3.x86_64.rpm",
        "sudo rpm -i /tmp/java-11-amazon-corretto-devel-11.0.2.9-3.x86_64.rpm",
        "rm /tmp/java-11-amazon-corretto-devel-11.0.2.9-3.x86_64.rpm"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "sudo keytool -genkeypair -keypass Password123! -dname \"CN=philter, O=philter, C=US\" -alias philter -keyalg RSA -keysize 4096 -storepass Password123! -storetype PKCS12 -keystore /opt/filter-profile-registry/ssl/filter-profile-registry.p12 -validity 3650",
        "echo \"\n\" | sudo tee -a /opt/filter-profile-registry/application.properties",
        "echo \"# SSL certificate settings\" | sudo tee -a /opt/filter-profile-registry/application.properties",
        "echo \"server.ssl.key-store-type=PKCS12\" | sudo tee -a /opt/filter-profile-registry/application.properties",
        "echo \"server.ssl.key-store=/opt/filter-profile-registry/ssl/filter-profile-registry.p12\" | sudo tee -a /opt/filter-profile-registry/application.properties",
        "echo \"server.ssl.key-store-password=Password123!\" | sudo tee -a /opt/filter-profile-registry/application.properties",
        "echo \"server.ssl.key-alias=philter\" | sudo tee -a /opt/filter-profile-registry/application.properties",
        "echo \"security.require-ssl=true\" | sudo tee -a /opt/filter-profile-registry/application.properties"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "sudo chown {{user `ssh_username`}}:{{user `ssh_username`}} /opt/filter-profile-registry/ -R",
        "sudo chmod +x /opt/philter/filter-profile-registry.jar",
        "sudo ln -s /opt/philter/philter.jar /etc/init.d/filter-profile-registry",
        "sudo chkconfig filter-profile-registry on"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "# Set permissions and ownership.",
        "sudo chmod 500 /opt/filter-profile-registry/filter-profile-registry.jar",
        "sudo chmod 644 /opt/filter-profile-registry/filter-profile-registry.conf",
        "sudo chmod 644 /opt/filter-profile-registry/application.properties",
        "sudo chmod 644 /opt/filter-profile-registry/LICENSE.txt",
        "sudo chmod 644 /opt/filter-profile-registry/NOTICE.txt",
        "sudo chmod 644 /opt/filter-profile-registry/README.txt",
        "sudo chown philter:philter /opt/philter -R"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "# Clean up.",
        "sudo sed -i 's/PermitRootLogin without-password/PermitRootLogin forced-commands-only/g' /etc/ssh/sshd_config",
        "sudo passwd -l root",
        "sudo shred -n 50 -fuzv /etc/ssh/*_key /etc/ssh/*_key.pub",
        "sudo find /root/.ssh -type f -exec shred -n 30 -z -u {} \\;",
        "sudo find /home/{{user `ssh_username`}}/.ssh -type f -exec shred -n 30 -z -u {} \\;",
        "sudo shred -n 50 -fuzv /var/log/wtmp",
        "sudo shred -n 50 -fuzv /var/log/btmp",
        "sudo shred -n 50 -fuzv /var/log/lastlog"
      ],
      "only": [
        "aws"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "# Deprovision on Azure.",
        "sudo /usr/sbin/waagent -force -deprovision+user && export HISTSIZE=0 && sync"
      ],
      "only": [
        "azure"
      ]
    }
  ],
  "post-processors": [
    [
      {
        "output": "manifest.json",
        "strip_path": true,
        "type": "manifest"
      }
    ]
  ]
}
