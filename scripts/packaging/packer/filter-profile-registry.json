{
  "variables": {
    "ami_name": "",
    "build_number": "",
    "commit": "",
    "version": "",
    "working_directory": "",
    "iam_instance_profile": "",
    "instance_type": "t3.micro",
    "region": "us-east-1",
    "source_ami": "",
    "source_ami_description": "",
    "ssh_username": "ec2-user",
    "subnet_id": "subnet-a8c4e883",
    "vpc_id": "vpc-3da1cb58",
    "built_by": "manual",
    "application": ""
  },
  "builders": [
    {
      "name": "aws",
      "type": "amazon-ebs",
      "ami_name": "{{user `ami_name`}}",
      "ami_description": "{{user `ami_name`}}",
      "ena_support": true,
      "instance_type": "{{user `instance_type`}}",
      "region": "{{user `region`}}",
      "run_tags": {
        "Name": "Creating {{user `ami_name`}} AMI"
      },
      "security_group_id": "{{user `security_group_id`}}",
      "source_ami": "{{user `source_ami`}}",
      "ssh_username": "{{user `ssh_username`}}",
      "subnet_id": "{{user `subnet_id`}}",
      "tags": {
        "Name": "{{user `ami_name`}}",
        "GitCommit": "{{user `commit`}}",
        "Version": "{{user `version`}}",
        "Base AMI": "{{user `source_ami`}}",
        "Base AMI Description": "{{user `source_ami_description`}}",
        "Built By": "{{user `built_by`}}",
        "Application": "{{user `application`}}",
        "Build Number": "{{user `build_number`}}"
      },
      "vpc_id": "{{user `vpc_id`}}"
    }
  ],
  "provisioners": [
    {
      "type": "shell",
      "inline": [
        "sudo yum -y upgrade",
        "# java-11-openjdk is available in Amazon Linux Extra topic \"java-openjdk11\"",
        "sudo amazon-linux-extras install java-openjdk11",
        "sudo yum clean all"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "sudo mkdir -p /opt/filter-profile-registry/ssl",
        "sudo mkdir -p /opt/filter-profile-registry/profiles",
        "sudo groupadd philter",
        "sudo useradd --system --create-home --gid philter philter",
        "sudo usermod --lock --shell /sbin/nologin philter",
        "sudo chage -E0 philter",
        "sudo chown {{user `ssh_username`}}:{{user `ssh_username`}} /opt/filter-profile-registry -R"
      ]
    },
    {
      "type": "file",
      "destination": "/opt/filter-profile-registry/filter-profile-registry.jar",
      "source": "{{user `working_directory`}}/filter-profile-registry.jar"
    },
    {
      "type": "file",
      "destination": "/opt/filter-profile-registry/application.properties",
      "source": "{{user `working_directory`}}/application.properties"
    },
    {
      "type": "file",
      "destination": "/opt/filter-profile-registry/README.txt",
      "source": "{{user `working_directory`}}/README.txt"
    },
    {
      "type": "file",
      "destination": "/opt/filter-profile-registry/NOTICE.txt",
      "source": "{{user `working_directory`}}/NOTICE.txt"
    },
    {
      "type": "file",
      "destination": "/opt/filter-profile-registry/LICENSE.txt",
      "source": "{{user `working_directory`}}/LICENSE.txt"
    },
    {
      "type": "file",
      "destination": "/opt/filter-profile-registry/filter-profile-registry.conf",
      "source": "{{user `working_directory`}}/filter-profile-registry.conf"
    },
    {
      "type": "file",
      "destination": "/tmp/filter-profile-registry.service",
      "source": "{{user `working_directory`}}/filter-profile-registry.service"
    },
    {
      "type": "shell",
      "inline": [
        "sudo keytool -genkeypair -keypass Password123! -dname \"CN=fpr, O=fpr, C=US\" -alias fpr -keyalg RSA -keysize 4096 -storepass Password123! -storetype PKCS12 -keystore /opt/filter-profile-registry/ssl/filter-profile-registry.p12 -validity 3650",
        "echo \"\n\" | sudo tee -a /opt/filter-profile-registry/application.properties",
        "echo \"# SSL certificate settings\" | sudo tee -a /opt/filter-profile-registry/application.properties",
        "echo \"server.ssl.key-store-type=PKCS12\" | sudo tee -a /opt/filter-profile-registry/application.properties",
        "echo \"server.ssl.key-store=/opt/filter-profile-registry/ssl/filter-profile-registry.p12\" | sudo tee -a /opt/filter-profile-registry/application.properties",
        "echo \"server.ssl.key-store-password=Password123!\" | sudo tee -a /opt/filter-profile-registry/application.properties",
        "echo \"server.ssl.key-alias=fpr\" | sudo tee -a /opt/filter-profile-registry/application.properties",
        "echo \"security.require-ssl=true\" | sudo tee -a /opt/filter-profile-registry/application.properties"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "sudo chown {{user `ssh_username`}}:{{user `ssh_username`}} /opt/filter-profile-registry/ -R",
        "sudo chmod +x /opt/filter-profile-registry/filter-profile-registry.jar",
        "sudo mv /tmp/filter-profile-registry.service /etc/systemd/system/filter-profile-registry.service",
        "sudo systemctl daemon-reload",
        "sudo chkconfig filter-profile-registry on"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "# Set permissions and ownership.",
        "sudo chmod 500 /opt/filter-profile-registry/filter-profile-registry.jar",
        "sudo chmod 600 /opt/filter-profile-registry/ssl/filter-profile-registry.p12",
        "sudo chmod 644 /opt/filter-profile-registry/filter-profile-registry.conf",
        "sudo chmod 644 /opt/filter-profile-registry/application.properties",
        "sudo chmod 644 /opt/filter-profile-registry/LICENSE.txt",
        "sudo chmod 644 /opt/filter-profile-registry/NOTICE.txt",
        "sudo chmod 644 /opt/filter-profile-registry/README.txt",
        "sudo chown philter:philter /opt/filter-profile-registry -R"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "# Clean up.",
        "sudo sed -i 's/PermitRootLogin without-password/PermitRootLogin forced-commands-only/g' /etc/ssh/sshd_config",
        "sudo passwd -l root",
        "sudo shred -n 50 -fuzv /etc/ssh/*_key /etc/ssh/*_key.pub",
        "sudo find /root/.ssh -type f -exec shred -n 30 -z -u {} \\;",
        "sudo find /home/{{user `ssh_username`}}/.ssh -type f -exec shred -n 30 -z -u {} \\;",
        "sudo shred -n 50 -fuzv /var/log/wtmp",
        "sudo shred -n 50 -fuzv /var/log/btmp",
        "sudo shred -n 50 -fuzv /var/log/lastlog"
      ]
    }
  ],
  "post-processors": [
    [
      {
        "output": "manifest.json",
        "strip_path": true,
        "type": "manifest"
      }
    ]
  ]
}
